{"ast":null,"code":"var _jsxFileName = \"/Users/samzimmerman/Documents/Apps/Website/src/functions/createRows.tsx\";\nimport React from \"react\";\nexport function makePics(pictures) {\n  let pics = [];\n  pictures.forEach(element => {\n    pics.push( /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col p-md-2 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: element,\n      className: \"img-fluid pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: element,\n      className: \"img-fluid pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    })));\n  });\n  return pics;\n}\nexport function threeCols(images, startID, endID) {\n  let col1 = [];\n  let col2 = [];\n  let col3 = [];\n  images.forEach(image => {\n    if (image.id < startID || image.id > endID) {\n      return;\n    } else {\n      switch (image.col) {\n        case 1:\n          col1.push( /*#__PURE__*/React.createElement(\"img\", {\n            src: image.src,\n            className: \"img-fluid pb-3\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 21\n            }\n          }));\n          break;\n\n        case 2:\n          col2.push( /*#__PURE__*/React.createElement(\"img\", {\n            src: image.src,\n            className: \"img-fluid pb-3\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 21\n            }\n          }));\n          break;\n\n        case 3:\n          col3.push( /*#__PURE__*/React.createElement(\"img\", {\n            src: image.src,\n            className: \"img-fluid pb-3\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 21\n            }\n          }));\n          break;\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-3 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col p-md-1 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, col1), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col p-md-1 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, col2), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col p-md-1 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, col3));\n}\nexport function twoColsPanoLeft(imagePano, imageRight) {}\nexport function twoColsPanoRight(imagePano, imageLeft) {}\nexport function oneColPano(imagePano) {} // Public Link of image in the folder:\n// https://drive.google.com/file/d/1cY-mtBLEQr-mWexB5Ap7H-Oi6402dT8C/view?usp=sharing\n// This is the ID extracted from that link:\n// 1cY-mtBLEQr-mWexB5Ap7H-Oi6402dT8C\n// Put that ID into this link and the picture will be accessible\n// http://drive.google.com/uc?export=view&id=<XXXX>\n// Use that link for the <img> src.","map":{"version":3,"sources":["/Users/samzimmerman/Documents/Apps/Website/src/functions/createRows.tsx"],"names":["React","makePics","pictures","pics","forEach","element","push","threeCols","images","startID","endID","col1","col2","col3","image","id","col","src","twoColsPanoLeft","imagePano","imageRight","twoColsPanoRight","imageLeft","oneColPano"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,SAASC,QAAT,CAAkBC,QAAlB,EAAsC;AAC3C,MAAIC,IAAS,GAAG,EAAhB;AACAD,EAAAA,QAAQ,CAACE,OAAT,CAAkBC,OAAD,IAAa;AAC5BF,IAAAA,IAAI,CAACG,IAAL,eACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAED,OAAV;AAAmB,MAAA,SAAS,EAAC,gBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,GAAG,EAAEA,OAAV;AAAmB,MAAA,SAAS,EAAC,gBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD,GAPD;AAQA,SAAOF,IAAP;AACD;AAED,OAAO,SAASI,SAAT,CAAmBC,MAAnB,EAAoCC,OAApC,EAAqDC,KAArD,EAAoE;AACzE,MAAIC,IAAS,GAAG,EAAhB;AACA,MAAIC,IAAS,GAAG,EAAhB;AACA,MAAIC,IAAS,GAAG,EAAhB;AAEAL,EAAAA,MAAM,CAACJ,OAAP,CAAgBU,KAAD,IAAW;AACxB,QAAIA,KAAK,CAACC,EAAN,GAAWN,OAAX,IAAsBK,KAAK,CAACC,EAAN,GAAWL,KAArC,EAA4C;AAC1C;AACD,KAFD,MAEO;AACL,cAAQI,KAAK,CAACE,GAAd;AACE,aAAK,CAAL;AACEL,UAAAA,IAAI,CAACL,IAAL,eAAU;AAAK,YAAA,GAAG,EAAEQ,KAAK,CAACG,GAAhB;AAAqB,YAAA,SAAS,EAAC,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACA;;AACF,aAAK,CAAL;AACEL,UAAAA,IAAI,CAACN,IAAL,eAAU;AAAK,YAAA,GAAG,EAAEQ,KAAK,CAACG,GAAhB;AAAqB,YAAA,SAAS,EAAC,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACA;;AACF,aAAK,CAAL;AACEJ,UAAAA,IAAI,CAACP,IAAL,eAAU;AAAK,YAAA,GAAG,EAAEQ,KAAK,CAACG,GAAhB;AAAqB,YAAA,SAAS,EAAC,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACA;AATJ;AAWD;AACF,GAhBD;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAC,2DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCN,IAAzC,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCC,IAAzC,CAFF,eAGE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCC,IAAzC,CAHF,CADF;AAOD;AAED,OAAO,SAASK,eAAT,CAAyBC,SAAzB,EAA2CC,UAA3C,EAA8D,CAAE;AAEvE,OAAO,SAASC,gBAAT,CAA0BF,SAA1B,EAA4CG,SAA5C,EAA8D,CAAE;AAEvE,OAAO,SAASC,UAAT,CAAoBJ,SAApB,EAAsC,CAAE,C,CAE/C;AACA;AAEA;AACA;AAEA;AACA;AAEA","sourcesContent":["import React from \"react\";\nimport { Image } from \"./createImageList\";\n\nexport function makePics(pictures: string[]) {\n  let pics: any = [];\n  pictures.forEach((element) => {\n    pics.push(\n      <div className=\"col p-md-2 text-center\">\n        <img src={element} className=\"img-fluid pb-3\"></img>\n        <img src={element} className=\"img-fluid pb-3\"></img>\n      </div>\n    );\n  });\n  return pics;\n}\n\nexport function threeCols(images: Image[], startID: number, endID: number) {\n  let col1: any = [];\n  let col2: any = [];\n  let col3: any = [];\n\n  images.forEach((image) => {\n    if (image.id < startID || image.id > endID) {\n      return;\n    } else {\n      switch (image.col) {\n        case 1:\n          col1.push(<img src={image.src} className=\"img-fluid pb-3\"></img>);\n          break;\n        case 2:\n          col2.push(<img src={image.src} className=\"img-fluid pb-3\"></img>);\n          break;\n        case 3:\n          col3.push(<img src={image.src} className=\"img-fluid pb-3\"></img>);\n          break;\n      }\n    }\n  });\n\n  return (\n    <div className=\"row row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-3 \">\n      <div className=\"col p-md-1 text-center\">{col1}</div>\n      <div className=\"col p-md-1 text-center\">{col2}</div>\n      <div className=\"col p-md-1 text-center\">{col3}</div>\n    </div>\n  );\n}\n\nexport function twoColsPanoLeft(imagePano: Image, imageRight: Image) {}\n\nexport function twoColsPanoRight(imagePano: Image, imageLeft: Image) {}\n\nexport function oneColPano(imagePano: Image) {}\n\n// Public Link of image in the folder:\n// https://drive.google.com/file/d/1cY-mtBLEQr-mWexB5Ap7H-Oi6402dT8C/view?usp=sharing\n\n// This is the ID extracted from that link:\n// 1cY-mtBLEQr-mWexB5Ap7H-Oi6402dT8C\n\n// Put that ID into this link and the picture will be accessible\n// http://drive.google.com/uc?export=view&id=<XXXX>\n\n// Use that link for the <img> src.\n"]},"metadata":{},"sourceType":"module"}