{"ast":null,"code":"var _jsxFileName = \"/Users/samzimmerman/Documents/Apps/Website/src/Weather/Chart.tsx\";\nimport * as d3 from \"d3\";\nimport React, { useRef, useEffect } from \"react\";\n\nfunction Chart({\n  width,\n  height,\n  data\n}) {\n  const ref = useRef(null);\n  var margin = {\n    top: 20,\n    right: 50,\n    bottom: 30,\n    left: 40\n  };\n  var dateDomain = d3.extent(data, d => parseInt(d.date));\n  var tempRange = d3.extent(data, d => parseFloat(d.temps[0]));\n  var scaleX = d3.scaleUtc().domain(dateDomain).range([margin.left, width - margin.right]);\n  var scaleY = d3.scaleLinear().domain(tempRange).nice().range([height - margin.bottom, margin.top]);\n\n  function yAxis(g) {\n    g.attr(\"transform\", `translate(${margin.left}, 0)`).call(d3.axisLeft(scaleY)).call(g => g.select(\".domain\").remove()).call(g => g.select(\".tick:last-of-type text\").clone().attr(\"x\", 3).attr(\"text-anchor\", \"start\").attr(\"font-weight\", \"bold\").text(\"Temperature\"));\n  }\n\n  function xAxis(g) {\n    g.attr(\"transform\", `translate(0,${height - margin.bottom})`).call(d3.axisBottom(scaleX).ticks(width / 80).tickSizeOuter(0));\n  }\n\n  let line = d3.line().x(d => scaleX(d.date)).y(d => scaleY(parseFloat(d.temps[0])));\n\n  function linePath(g) {\n    g.datum(data).attr(\"fill\", \"none\").attr(\"stroke\", \"steelblue\").attr(\"stroke-width\", 1.5).attr(\"stroke-linejoin\", \"round\").attr(\"stroke-linecap\", \"round\").attr(\"d\", line);\n  }\n\n  var lastTime;\n  var lastTemp;\n\n  if (data) {\n    try {\n      let index = data.length - 1;\n      lastTime = data[index].date;\n      lastTemp = parseFloat(data[index].temps[0]);\n    } catch (error) {}\n  }\n\n  function lineLabel(g) {\n    g.attr(\"transform\", \"translate(\" + (width - margin.left) + \",\" + scaleY(lastTemp) + \")\").attr(\"dy\", \".35em\").attr(\"text-anchor\", \"start\").style(\"fill\", \"steelblue\").text(lastTemp);\n  }\n\n  function endCircle(g) {\n    if (scaleY(lastTemp)) {\n      g.attr(\"fill\", \"steelblue\").attr(\"transform\", \"translate(\" + scaleX(lastTime) + \",\" + scaleY(lastTemp) + \")\").attr(\"r\", 3);\n    }\n  }\n\n  useEffect(() => {\n    const svg = d3.select(ref.current);\n    svg.attr(\"viewBox\", `[0, 0, ${width}, ${height}]`);\n    svg.attr(\"width\", width).attr(\"height\", height).style(\"border\", \"1px solid black\");\n    svg.append(\"g\").call(yAxis);\n    let changingXAxis = svg.append(\"g\").call(xAxis, scaleX);\n    svg.append(\"text\").call(lineLabel);\n    svg.append(\"circle\").call(endCircle);\n    let path = svg.append(\"path\").call(linePath); // svg.call(\n    //   d3\n    //     .zoom()\n    //     .extent([\n    //       [0, 0],\n    //       [width, height],\n    //     ])\n    //     .scaleExtent([1, 8])\n    //     .on(\"zoom\", zoomed)\n    // );\n\n    function zoomed({\n      transform\n    }) {\n      svg.append(\"g\").attr(\"transform\", transform);\n    } // var zoom = d3.zoom()\n    //   .scaleExtent([1, 32])\n    //   .extent([[margin.left, 0], [width - margin.right, height]])\n    // .translateExtent([[margin.left, -Infinity], [width - margin.right, Infinity]])\n    // .on(\"zoom\", zoomed);\n    // svg.call(zoom)\n    //   .transition()\n    //     .duration(750)\n    //     .call(zoom.scaleTo, 4, [scaleX(Date.UTC(2020, 10, 1)), 0]);\n    // function zoomed(event: any) {\n    //   g.attr(\"transform\", event);\n    // const xz = event.transform.rescaleX(scaleX);\n    // path.attr(\"d\", area(data, xz));\n    // changingXAxis.call(xAxis, xz);\n    // }\n\n  }, [data]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Chart;","map":{"version":3,"sources":["/Users/samzimmerman/Documents/Apps/Website/src/Weather/Chart.tsx"],"names":["d3","React","useRef","useEffect","Chart","width","height","data","ref","margin","top","right","bottom","left","dateDomain","extent","d","parseInt","date","tempRange","parseFloat","temps","scaleX","scaleUtc","domain","range","scaleY","scaleLinear","nice","yAxis","g","attr","call","axisLeft","select","remove","clone","text","xAxis","axisBottom","ticks","tickSizeOuter","line","x","y","linePath","datum","lastTime","lastTemp","index","length","error","lineLabel","style","endCircle","svg","current","append","changingXAxis","path","zoomed","transform"],"mappings":"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","sourcesContent":["import * as d3 from \"d3\";\nimport React, { useRef, useEffect } from \"react\";\n\ntype propsStructure = {\n  width: number;\n  height: number;\n  data: dataStructure;\n};\ntype dataStructure = {\n  date: number;\n  temps: [string, string];\n};\n\nfunction Chart({ width, height, data }: any) {\n  const ref = useRef(null);\n  var margin = { top: 20, right: 50, bottom: 30, left: 40 };\n  var dateDomain = d3.extent(data, (d: any) => parseInt(d.date));\n  var tempRange = d3.extent(data, (d: any) => parseFloat(d.temps[0]));\n\n  var scaleX = d3\n    .scaleUtc()\n    .domain(dateDomain as [number, number])\n    .range([margin.left, width - margin.right]);\n\n  var scaleY = d3\n    .scaleLinear()\n    .domain(tempRange as [number, number])\n    .nice()\n    .range([height - margin.bottom, margin.top]);\n\n  function yAxis(g: any) {\n    g.attr(\"transform\", `translate(${margin.left}, 0)`)\n      .call(d3.axisLeft(scaleY))\n      .call((g: any) => g.select(\".domain\").remove())\n      .call((g: any) =>\n        g\n          .select(\".tick:last-of-type text\")\n          .clone()\n          .attr(\"x\", 3)\n          .attr(\"text-anchor\", \"start\")\n          .attr(\"font-weight\", \"bold\")\n          .text(\"Temperature\")\n      );\n  }\n\n  function xAxis(g: any) {\n    g.attr(\"transform\", `translate(0,${height - margin.bottom})`).call(\n      d3\n        .axisBottom(scaleX)\n        .ticks(width / 80)\n        .tickSizeOuter(0)\n    );\n  }\n\n  let line = d3\n    .line()\n    .x((d: any) => scaleX(d.date))\n    .y((d: any) => scaleY(parseFloat(d.temps[0])));\n\n  function linePath(g: any) {\n    g.datum(data)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"steelblue\")\n      .attr(\"stroke-width\", 1.5)\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-linecap\", \"round\")\n      .attr(\"d\", line);\n  }\n\n  var lastTime: number;\n  var lastTemp: number;\n  if (data) {\n    try {\n      let index = data.length - 1;\n      lastTime = data[index].date;\n      lastTemp = parseFloat(data[index].temps[0]);\n    } catch (error) {}\n  }\n  function lineLabel(g: any) {\n    g.attr(\n      \"transform\",\n      \"translate(\" + (width - margin.left) + \",\" + scaleY(lastTemp) + \")\"\n    )\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", \"start\")\n      .style(\"fill\", \"steelblue\")\n      .text(lastTemp);\n  }\n  function endCircle(g: any) {\n    if (scaleY(lastTemp)) {\n      g.attr(\"fill\", \"steelblue\")\n        .attr(\n          \"transform\",\n          \"translate(\" + scaleX(lastTime) + \",\" + scaleY(lastTemp) + \")\"\n        )\n        .attr(\"r\", 3);\n    }\n  }\n\n  useEffect(() => {\n    const svg = d3.select(ref.current);\n\n    svg.attr(\"viewBox\", `[0, 0, ${width}, ${height}]`);\n    svg\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .style(\"border\", \"1px solid black\");\n\n    svg.append(\"g\").call(yAxis);\n    let changingXAxis = svg.append(\"g\").call(xAxis, scaleX);\n    svg.append(\"text\").call(lineLabel);\n    svg.append(\"circle\").call(endCircle);\n    let path = svg.append(\"path\").call(linePath);\n\n    // svg.call(\n    //   d3\n    //     .zoom()\n    //     .extent([\n    //       [0, 0],\n    //       [width, height],\n    //     ])\n    //     .scaleExtent([1, 8])\n    //     .on(\"zoom\", zoomed)\n    // );\n\n    function zoomed({ transform }: any) {\n      svg.append(\"g\").attr(\"transform\", transform);\n    }\n    // var zoom = d3.zoom()\n    //   .scaleExtent([1, 32])\n    //   .extent([[margin.left, 0], [width - margin.right, height]])\n    // .translateExtent([[margin.left, -Infinity], [width - margin.right, Infinity]])\n    // .on(\"zoom\", zoomed);\n\n    // svg.call(zoom)\n    //   .transition()\n    //     .duration(750)\n    //     .call(zoom.scaleTo, 4, [scaleX(Date.UTC(2020, 10, 1)), 0]);\n\n    // function zoomed(event: any) {\n    //   g.attr(\"transform\", event);\n    // const xz = event.transform.rescaleX(scaleX);\n    // path.attr(\"d\", area(data, xz));\n    // changingXAxis.call(xAxis, xz);\n    // }\n  }, [data]);\n\n  return (\n    <div className=\"chart\">\n      <svg ref={ref}></svg>\n    </div>\n  );\n}\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}