{"ast":null,"code":"var _jsxFileName = \"/Users/samzimmerman/Documents/Apps/Website/src/Weather/Chart.tsx\";\nimport * as d3 from \"d3\";\nimport { zoomTransform } from \"d3\";\nimport React, { useRef, useEffect, useState } from \"react\";\nconst margin = {\n  top: 20,\n  right: 50,\n  bottom: 30,\n  left: 40\n};\n\nfunction Chart({\n  width,\n  height,\n  data\n}) {\n  const ref = useRef(null);\n  const [currentZoomState, setCurrentZoomState] = useState();\n  useEffect(() => {\n    // Get the SVG and setup\n    const svg = d3.select(ref.current);\n    svg.attr(\"width\", width).attr(\"height\", height).style(\"border\", \"1px solid black\"); // X Axis\n\n    var dateDomain = d3.extent(data, d => parseInt(d.date));\n    var scaleX = d3.scaleUtc().domain(dateDomain).range([margin.left, width - margin.right]);\n\n    if (currentZoomState) {\n      let newXScale = currentZoomState.rescaleX(scaleX);\n      scaleX.domain(newXScale.domain());\n    }\n\n    function xAxis(g) {\n      g.attr(\"transform\", `translate(0,${height - margin.bottom})`).call(d3.axisBottom(scaleX).ticks(width / 80).tickSizeOuter(0));\n    }\n\n    svg.select(\".x-axis\").call(xAxis); // Y Axis\n\n    var tempRange = d3.extent(data, d => parseFloat(d.temps[0]));\n    var scaleY = d3.scaleLinear() // .domain(tempRange as [number, number])\n    .domain([70, 80]).nice().range([height - margin.bottom - 10, margin.top]);\n\n    function yAxis(g) {\n      g.attr(\"transform\", `translate(${margin.left}, 0)`).call(d3.axisLeft(scaleY)) // .call((g: any) => g.select(\".domain\").remove())\n      .call(g => g.select(\".tick:last-of-type text\").clone().attr(\"x\", 3).attr(\"text-anchor\", \"start\").attr(\"font-weight\", \"bold\").text(\"Temperature\"));\n    }\n\n    svg.select(\".y-axis\").call(yAxis); // Line\n\n    let lineGenerator = d3.line().x(d => scaleX(d.date)).y(d => scaleY(parseFloat(d.temps[0])));\n    svg.select(\".graphContent\").selectAll(\".myLine\").data([data]).join(\"path\").attr(\"class\", \"myLine\").attr(\"stroke\", \"steelblue\").attr(\"fill\", \"none\").attr(\"stroke-width\", 1.5).attr(\"stroke-linejoin\", \"round\").attr(\"stroke-linecap\", \"round\").attr(\"d\", lineGenerator);\n    let lineGenerator2 = d3.line().x(d => scaleX(d.date)).y(d => scaleY(parseFloat(d.temps[1])));\n    svg.select(\".graphContent\").selectAll(\".myLineSecond\").data([data]).join(\"path\").attr(\"class\", \"myLineSecond\").attr(\"stroke\", \"red\").attr(\"fill\", \"none\").attr(\"stroke-width\", 1.5).attr(\"stroke-linejoin\", \"round\").attr(\"stroke-linecap\", \"round\").attr(\"d\", lineGenerator2); // Label and dot for last temp, Not using rn\n\n    var lastTime;\n    var lastTemp;\n\n    if (data) {\n      try {\n        let index = data.length - 1;\n        lastTime = data[index].date;\n        lastTemp = parseFloat(data[index].temps[0]);\n      } catch (error) {}\n    }\n\n    function lineLabel(g) {\n      g.attr(\"transform\", \"translate(\" + (width - margin.left) + \",\" + scaleY(lastTemp) + \")\").attr(\"dy\", \".35em\").attr(\"text-anchor\", \"start\").style(\"fill\", \"steelblue\").text(lastTemp);\n    }\n\n    function endCircle(g) {\n      if (scaleY(lastTemp)) {\n        g.attr(\"fill\", \"steelblue\").attr(\"transform\", \"translate(\" + scaleX(lastTime) + \",\" + scaleY(lastTemp) + \")\").attr(\"r\", 3);\n      }\n    } // svg.append(\"text\").call(lineLabel);\n    // svg.append(\"circle\").call(endCircle);\n    // Zooming functionality\n\n\n    var zoom = d3.zoom().scaleExtent([1, 100]).extent([[margin.left, 0], [width - margin.right, height]]).translateExtent([[margin.left, 0], [width - margin.right, height]]).on(\"zoom\", () => {\n      const zoomState = zoomTransform(svg.node());\n      setCurrentZoomState(zoomState);\n    });\n    svg.call(zoom); // If either of these change, useEffect is called again\n  }, [currentZoomState, data]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"defs\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"myLineChart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: margin.left,\n    y: margin.bottom,\n    width: width - margin.right - margin.left,\n    height: height - margin.top - margin.bottom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"graphContent\",\n    clipPath: `url(#myLineChart)`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"x-axis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"y-axis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Chart;","map":{"version":3,"sources":["/Users/samzimmerman/Documents/Apps/Website/src/Weather/Chart.tsx"],"names":["d3","zoomTransform","React","useRef","useEffect","useState","margin","top","right","bottom","left","Chart","width","height","data","ref","currentZoomState","setCurrentZoomState","svg","select","current","attr","style","dateDomain","extent","d","parseInt","date","scaleX","scaleUtc","domain","range","newXScale","rescaleX","xAxis","g","call","axisBottom","ticks","tickSizeOuter","tempRange","parseFloat","temps","scaleY","scaleLinear","nice","yAxis","axisLeft","clone","text","lineGenerator","line","x","y","selectAll","join","lineGenerator2","lastTime","lastTemp","index","length","error","lineLabel","endCircle","zoom","scaleExtent","translateExtent","on","zoomState","node"],"mappings":"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","sourcesContent":["import * as d3 from \"d3\";\nimport { zoomTransform } from \"d3\";\nimport React, { useRef, useEffect, useState } from \"react\";\n\nconst margin = { top: 20, right: 50, bottom: 30, left: 40 };\n\nfunction Chart({ width, height, data }: any) {\n  const ref = useRef(null);\n  const [currentZoomState, setCurrentZoomState] = useState();\n\n  useEffect(() => {\n    // Get the SVG and setup\n    const svg = d3.select(ref.current);\n    svg\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .style(\"border\", \"1px solid black\");\n\n    // X Axis\n    var dateDomain = d3.extent(data, (d: any) => parseInt(d.date));\n    var scaleX = d3\n      .scaleUtc()\n      .domain(dateDomain as [number, number])\n      .range([margin.left, width - margin.right]);\n\n    if (currentZoomState) {\n      let newXScale = (currentZoomState as any).rescaleX(scaleX);\n      scaleX.domain(newXScale.domain());\n    }\n    function xAxis(g: any) {\n      g.attr(\"transform\", `translate(0,${height - margin.bottom})`).call(\n        d3\n          .axisBottom(scaleX)\n          .ticks(width / 80)\n          .tickSizeOuter(0)\n      );\n    }\n    svg.select(\".x-axis\").call(xAxis);\n\n    // Y Axis\n    var tempRange = d3.extent(data, (d: any) => parseFloat(d.temps[0]));\n    var scaleY = d3\n      .scaleLinear()\n      // .domain(tempRange as [number, number])\n      .domain([70, 80])\n      .nice()\n      .range([height - margin.bottom - 10, margin.top]);\n    function yAxis(g: any) {\n      g.attr(\"transform\", `translate(${margin.left}, 0)`)\n        .call(d3.axisLeft(scaleY))\n        // .call((g: any) => g.select(\".domain\").remove())\n        .call((g: any) =>\n          g\n            .select(\".tick:last-of-type text\")\n            .clone()\n            .attr(\"x\", 3)\n            .attr(\"text-anchor\", \"start\")\n            .attr(\"font-weight\", \"bold\")\n            .text(\"Temperature\")\n        );\n    }\n    svg.select(\".y-axis\").call(yAxis);\n\n    // Line\n    let lineGenerator = d3\n      .line()\n      .x((d: any) => scaleX(d.date))\n      .y((d: any) => scaleY(parseFloat(d.temps[0])));\n\n    svg\n      .select(\".graphContent\")\n      .selectAll(\".myLine\")\n      .data([data])\n      .join(\"path\")\n      .attr(\"class\", \"myLine\")\n      .attr(\"stroke\", \"steelblue\")\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke-width\", 1.5)\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-linecap\", \"round\")\n      .attr(\"d\", lineGenerator);\n\n    let lineGenerator2 = d3\n      .line()\n      .x((d: any) => scaleX(d.date))\n      .y((d: any) => scaleY(parseFloat(d.temps[1])));\n\n    svg\n      .select(\".graphContent\")\n      .selectAll(\".myLineSecond\")\n      .data([data])\n      .join(\"path\")\n      .attr(\"class\", \"myLineSecond\")\n      .attr(\"stroke\", \"red\")\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke-width\", 1.5)\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-linecap\", \"round\")\n      .attr(\"d\", lineGenerator2);\n\n    // Label and dot for last temp, Not using rn\n    var lastTime: number;\n    var lastTemp: number;\n    if (data) {\n      try {\n        let index = data.length - 1;\n        lastTime = data[index].date;\n        lastTemp = parseFloat(data[index].temps[0]);\n      } catch (error) {}\n    }\n    function lineLabel(g: any) {\n      g.attr(\n        \"transform\",\n        \"translate(\" + (width - margin.left) + \",\" + scaleY(lastTemp) + \")\"\n      )\n        .attr(\"dy\", \".35em\")\n        .attr(\"text-anchor\", \"start\")\n        .style(\"fill\", \"steelblue\")\n        .text(lastTemp);\n    }\n    function endCircle(g: any) {\n      if (scaleY(lastTemp)) {\n        g.attr(\"fill\", \"steelblue\")\n          .attr(\n            \"transform\",\n            \"translate(\" + scaleX(lastTime) + \",\" + scaleY(lastTemp) + \")\"\n          )\n          .attr(\"r\", 3);\n      }\n    }\n    // svg.append(\"text\").call(lineLabel);\n    // svg.append(\"circle\").call(endCircle);\n\n    // Zooming functionality\n    var zoom: any = d3\n      .zoom()\n      .scaleExtent([1, 100])\n      .extent([\n        [margin.left, 0],\n        [width - margin.right, height],\n      ])\n      .translateExtent([\n        [margin.left, 0],\n        [width - margin.right, height],\n      ])\n      .on(\"zoom\", () => {\n        const zoomState = zoomTransform(svg.node() as any);\n        setCurrentZoomState(zoomState as any);\n      });\n\n    svg.call(zoom);\n\n    // If either of these change, useEffect is called again\n  }, [currentZoomState, data]);\n\n  return (\n    <div className=\"chart\">\n      <svg ref={ref}>\n        <defs>\n          <clipPath id=\"myLineChart\">\n            <rect\n              x={margin.left}\n              y={margin.bottom}\n              width={width - margin.right - margin.left}\n              height={height - margin.top - margin.bottom}\n            />\n          </clipPath>\n        </defs>\n        <g className=\"graphContent\" clipPath={`url(#myLineChart)`}></g>\n        <g className=\"x-axis\"></g>\n        <g className=\"y-axis\"></g>\n      </svg>\n    </div>\n  );\n}\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}